{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Bi",
				"BinaryTreeNode\tTypedef"
			],
			[
				"Mak",
				"MakeSubTree(BinaryTreeNode *bt, BinaryTreeNode *sub, SubTreeType nSubTreeType)\tvoid"
			],
			[
				"G",
				"GetSubTree"
			],
			[
				"bt",
				"bt4"
			],
			[
				"b",
				"bt2"
			],
			[
				"BinaryTre",
				"BinaryTreeNode"
			],
			[
				"BinaryT",
				"BinaryTreeNode"
			],
			[
				"Bin",
				"BinaryTreeNode"
			],
			[
				"sort",
				"sorted_list〔argument〕"
			],
			[
				"un",
				"unsorted_list〔variable〕"
			],
			[
				"qu",
				"quick_sort〔function〕"
			],
			[
				"print",
				"printHorizontalAlphabet"
			],
			[
				"SCA",
				"SCALED_HEIGTH_ALPHABET"
			],
			[
				"prin",
				"printVerticalScaledAlphabet"
			],
			[
				"printVer",
				"printOneVerticalWord"
			],
			[
				"pri",
				"printVerticalScaledAlphabet"
			],
			[
				"WI",
				"SCALED_WIDTH_ALPHABET"
			],
			[
				"idx",
				"idxAlphabet"
			],
			[
				"scale",
				"scaledStrAlphabet"
			],
			[
				"SCALE",
				"SCALE_RATE_WIDTH"
			],
			[
				"str",
				"strWord"
			],
			[
				"get",
				"getAlphabetIdx"
			],
			[
				"SC",
				"SCALE_RATE_HEIGHT"
			],
			[
				"S",
				"SCALE_RATE_HEIGHT"
			],
			[
				"SCL",
				"SCALED_HEIGTH_ALPHABET"
			],
			[
				"HEIGHT",
				"SCALED_HEIGTH_ALPHABET"
			],
			[
				"R",
				"SCALE_RATE_HEIGHT"
			],
			[
				"scal",
				"scaledStrAlphabet"
			],
			[
				"rep",
				"replaceAlphabetCharacter"
			],
			[
				"repla",
				"replaceAll"
			],
			[
				"pCha",
				"pChar1"
			],
			[
				"ch",
				"pChAlphabet"
			],
			[
				"cha",
				"character"
			],
			[
				"fu",
				"fuelGauge"
			],
			[
				"body",
				"body.h2"
			],
			[
				"bsO",
				"bsObj.h1"
			],
			[
				"u",
				"utf-8"
			],
			[
				"bs",
				"bsObj〔variable〕"
			],
			[
				"ur",
				"urlopen〔module〕"
			],
			[
				"file",
				"file_path"
			],
			[
				"g",
				"gJsonString"
			],
			[
				"to",
				"toJsonOutDump"
			],
			[
				"gJ",
				"gJsonString〔variable〕"
			],
			[
				"ou",
				"out_json"
			],
			[
				"jso",
				"jsonString〔variable〕"
			],
			[
				"dic",
				"dict1〔variable〕"
			],
			[
				"di",
				"dict2〔variable〕"
			],
			[
				"str_uni",
				"str_unicode2"
			],
			[
				"str_",
				"str_unicode"
			],
			[
				"ws",
				"ws.cell_value"
			],
			[
				"n_",
				"n_rows"
			],
			[
				"ro",
				"rowStartValuesLanguage〔function〕"
			],
			[
				"dict",
				"dict_language_prompt〔variable〕"
			],
			[
				"col",
				"colums_main_keyword〔argument〕"
			],
			[
				"co",
				"columns_to_key〔variable〕"
			],
			[
				"she",
				"sheet_list〔variable〕"
			],
			[
				"C",
				"ConvertToList"
			],
			[
				"list",
				"list_keys_main_keyword〔variable〕"
			],
			[
				"node_",
				"node_left"
			],
			[
				"data_",
				"data_data"
			],
			[
				"data",
				"data_right"
			],
			[
				"bTre",
				"bTree5"
			],
			[
				"bT",
				"bTree2"
			],
			[
				"da",
				"data_left"
			],
			[
				"ge",
				"get_right"
			],
			[
				"n",
				"n_tab_count"
			],
			[
				"siz",
				"sizeof"
			],
			[
				"bu",
				"size_backup_buffer"
			],
			[
				"size",
				"size_backup_buffer"
			],
			[
				"c",
				"cameleCase"
			],
			[
				"dest",
				"dest_idx"
			],
			[
				"ca",
				"camele_to_pothole"
			],
			[
				"NO",
				"NO_ERR_LIST"
			]
		]
	},
	"buffers":
	[
		{
			"file": "binary_tree_main.c",
			"settings":
			{
				"buffer_size": 602,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "binary_tree.h",
			"settings":
			{
				"buffer_size": 650,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include <stdio.h>\n#include <stdlib.h>\n#include \"binary_tree.h\"\n\nBinaryTreeNode *MakeBinaryTreeNode(void)\n{\n\tBinaryTreeNode *bt = (BinaryTreeNode *)malloc(sizeof(BinaryTreeNode));\n\tbt->left = NULL;\n\tbt->right = NULL;\n\treturn bt;\n}\n\nBinaryTreeData GetData(BinaryTreeNode *bt)\n{\n\treturn bt->data;\n}\n\nvoid SetData(BinaryTreeNode *bt, BinaryTreeData data)\n{\n\tbt->data = data;\n}\n\nBinaryTreeNode *GetSubTree(BinaryTreeNode *bt, SubTreeType nSubTreeType)\n{\n\tBinaryTreeNode* pSubTreeNode = NULL;\n\tif(nSubTreeType == LEFT_SUBTREE)\n\t{\n\t\tpSubTreeNode = bt->left;\n\t}\n\telse if(nSubTreeType == RIGHT_SUBTREE)\n\t{\n\t\tpSubTreeNode = bt->right;\n\t}\n\n\treturn pSubTreeNode;\n}\n\nvoid MakeSubTree(BinaryTreeNode *bt, BinaryTreeNode *sub, SubTreeType nSubTreeType)\n{\n\tif(nSubTreeType == LEFT_SUBTREE)\n\t{\n\t\tif(bt->left != NULL)\n\t\t{\n\t\t\tfree(bt->left);\n\t\t}\n\t\tbt->left = sub;\n\t}\n\telse if(nSubTreeType == RIGHT_SUBTREE)\n\t{\n\t\tif(bt->right != NULL)\n\t\t{\n\t\t\tfree(bt->right);\n\t\t}\n\t\tbt->right = sub;\n\t}\n}\n\nvoid InOr",
			"file": "binary_tree.c",
			"file_size": 967,
			"file_write_time": 131799079320000000,
			"settings":
			{
				"buffer_size": 978,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "binary_tree.sublime-project",
			"settings":
			{
				"buffer_size": 150,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 277,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 179.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"make",
				"Build With: Make"
			],
			[
				"eas",
				"EasyClangComplete: Settings"
			],
			[
				"Easy",
				"EasyClangComplete: Settings"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"ssc",
				"Set Syntax: C"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"ColorSu",
				"Colorsublime: Install Theme"
			],
			[
				"preview",
				"Markdown Preview: Export HTML in Sublime Text"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"the",
				"UI: Select Theme"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"Package Control: R",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Install Package Control"
			],
			[
				"C++",
				"Set Syntax: C++"
			]
		],
		"width": 540.0
	},
	"console":
	{
		"height": 131.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/sy/2.Github/2.DataStructure/DataStructure/C/Tree"
	],
	"file_history":
	[
		"/Users/sy/2.Github/2.DataStructure/DataStructure/C/Tree/compile_commands.json",
		"/Users/sy/2.Github/2.DataStructure/DataStructure/C/Tree/.clang_complete",
		"/Users/sy/2.Github/2.DataStructure/DataStructure/C/Tree/binary_tree",
		"/binary_tree.c",
		"/Users/sy/Language_tools/Language_tools/setup.py",
		"/Users/sy/2.Github/3.Algorithm/Algorithm/Algorithm@Python/python_sort/merge_sort.py",
		"/Users/sy/3.Resume/2018/이직준비중.txt",
		"/Users/sy/2.Github/3.Algorithm/Algorithm/Algorithm@Python/python_sort/quick_sort.py",
		"/Users/sy/Library/Application Support/Sublime Text 3/Packages/User/Colorsublime.sublime-settings",
		"/Users/sy/2.Github/3.Algorithm/Algorithm/Quiz/bitmap.txt",
		"/Users/sy/2.Github/3.Algorithm/Algorithm/Quiz/main.cpp",
		"/Users/sy/2.Github/3.Algorithm/Algorithm/Quiz/Makefile",
		"/Users/sy/2.Github/3.Algorithm/Algorithm/Quiz/CharacterTable.h",
		"/Users/sy/2.Github/3.Algorithm/Algorithm/Quiz/DisplayManager.h",
		"/Users/sy/2.Github/3.Algorithm/Algorithm/Quiz/DisplayManager.cpp",
		"/Users/sy/2.Github/3.Algorithm/Algorithm/Quiz/VictoryKorea.cpp",
		"/Users/sy/1.Study/C++/YoonSY_C++/16_example_1.cpp",
		"/Users/sy/1.Study/C++/YoonSY_C++/16_example_1.h",
		"/Users/sy/2.Github/5_Travel_scrapper/scrapping_web/travel_scrapper/GettingHtml.py",
		"/Users/sy/2.Github/5.Travel_scrapper/travel_scrapper/GettingHtml.py",
		"/Users/sy/1.Study/C++/Effective_C++/Item18_design_interface_to_use_correctly_easily.txt",
		"/Users/sy/2.Github/QtInMZ/qtqml-syntax-signals.md",
		"/Users/sy/Library/Application Support/Sublime Text 3/Packages/Markdown Preview/MarkdownPreview.sublime-settings",
		"/Users/sy/2.Github/QtInMZ/qtqml-cppintegration-definet.md",
		"/Users/sy/Library/Application Support/Sublime Text 3/Packages/User/MarkdownPreview.sublime-settings",
		"/Users/sy/2.Github/6.Pythonic/list_comprehension/list_comprehension.md",
		"/Users/sy/2.Github/5.Travel_scrapper/travel_scrapper/CheckPrintUnicodStr.py",
		"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/bs4/__init__.py",
		"/Users/sy/1.Study/Scrapper/01_Check_beautifulsoup.py",
		"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/decoder.py",
		"/Users/sy/4.Work/1_ExcelToJson/language_tools/ExcelToJson/out_json\\it.json",
		"/Users/sy/4.Work/check_sublimetext_py3.py",
		"/Users/sy/Library/Application Support/Sublime Text 3/Packages/User/python3.sublime-build",
		"/Users/sy/Documents/사진 2017. 6. 3. 오후 4.36 #2.jpg",
		"/Users/sy/4.Work/1_ExcelToJson/ExcelToJson_v3_1020/ExcelToJson_v2_Issue_between_byte_and_string/Src/PlantUML/1_ExcelToJson.txt",
		"/usr/local/lib/python2.7/site-packages/xlrd/__init__.py",
		"/Users/sy/4.Work/1_ExcelToJson/ExcelToJson_v3_1020/ExcelToJson_v2_Issue_between_byte_and_string/ExcelToJson.sublime-project",
		"/Users/sy/4.Work/2_Excel_To_Json/ExcelToJson/CheckStr.py",
		"/Users/sy/4.Work/2_Excel_To_Json/ExcelToJson/en.json",
		"/checkStr.py",
		"/Users/sy/4.Work/2_Excel_To_Json/ExcelToJson/ConvertExcelToCSV.py",
		"/Users/sy/4.Work/2_Excel_To_Json/ExcelToJson/KeyNameList.py",
		"/Users/sy/4.Work/2_Excel_To_Json/ExcelToJson/ConvertToJsonFromList.py",
		"/Users/sy/check.py",
		"/Users/sy/2.Github/2.DataStructure/DataStructure/CPP/3.LinkedList/SimpleLinkedList.h",
		"/Users/sy/2.Github/3.Algorithm/Algorithm/CodingDojang/log_quicksort1.log",
		"/Users/sy/2.Github/3.Algorithm/Algorithm/Algorithm@C/log_quicksort_!",
		"/Users/sy/2.Github/3.Algorithm/Algorithm/CodingDojang/::1. tab이 있는 offset+1부터 파일의 끝까지의 내용을 백업.",
		"/Users/sy/1.Study/61.py",
		"/Users/sy/2.Github/2.DataStructure/DataStructure/CPP/2.Queue/Queue.cpp",
		"/Users/sy/2.Github/2.DataStructure/DataStructure/CPP/1.Stack/stack.h",
		"/Users/sy/2.Github/2.DataStructure/DataStructure/CPP/1.Stack/stack.cpp",
		"/Users/sy/2.Github/2.DataStructure/DataStructure/CPP/3.LinkedList/main.cpp",
		"/Users/sy/2.Github/2.DataStructure/DataStructure/CPP/2.Queue/main.cpp"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "binary_tree_main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 602,
						"regions":
						{
						},
						"selection":
						[
							[
								340,
								340
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "binary_tree.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 650,
						"regions":
						{
						},
						"selection":
						[
							[
								640,
								640
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "binary_tree.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 978,
						"regions":
						{
						},
						"selection":
						[
							[
								978,
								978
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 114.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "binary_tree.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 150,
						"regions":
						{
						},
						"selection":
						[
							[
								33,
								33
							]
						],
						"settings":
						{
							"auto_complete": true,
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 277,
						"regions":
						{
						},
						"selection":
						[
							[
								277,
								277
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 203.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "binary_tree.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"find",
				"Find Results"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 235.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
